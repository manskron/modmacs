* Package manager
#+begin_src emacs-lisp
  (require 'package)

  (setq package-archives '(("melpa" . "https://melpa.org/packages/")
			  ("melpa-stable" . "https://stable.melpa.org/packages/")
			  ("org" . "https://orgmode.org/elpa/")
			  ("elpa" . "https://elpa.gnu.org/packages/")))

  (package-initialize)

  ;; Initialize use-package on non-Linux platforms
  (unless (package-installed-p 'use-package)
      (package-install 'use-package))
  (require 'use-package)
  (setq use-package-always-ensure t)
#+end_src

* Packages
#+begin_src emacs-lisp
(use-package org)

(use-package evil
  :config
  (evil-mode 1))

(use-package projectile
  :config
  (projectile-mode +1))

(use-package magit)

(use-package lsp-mode)

(use-package orderless
  :ensure t
  :custom
  (completion-styles '(orderless basic))
  (completion-category-overrides '((file (styles basic partial-completion)))))

(use-package consult)

(use-package marginalia
  :init
  (marginalia-mode))

(use-package vertico
  :init
  (vertico-mode))

(use-package which-key
  :init
  (which-key-mode)
  :diminish which-key-mode
  :config
  (setq which-key-idle-delay 0.3))
#+end_src

* Keymappings
#+begin_src emacs-lisp
(use-package general
  :config
  (general-create-definer mods/leader-keys
    :keymaps '(normal insert visual emacs)
    :prefix "SPC"
    :global-prefix "C-SPC")

  (mods/leader-keys

    ;;Shell
    "SPC" '(execute-extended-command :which-key "M-x")

    ;;Buffers
    "b"   '(:ignore t :which-key "buffers")
    "b b" '(consult-buffer :which-key "list")
    "b k" '(kill-buffer :which-key "kill")
    "b l" '(next-buffer :which-key "next")
    "b h" '(previous-buffer :which-key "prev")
    "b s" '(consult-line :which-key "search")

    ;;Eshell
    "e" '(eshell :which-key "eshell")

    ;;Files
    "f"   '(:ignore t :which-key "files")
    "f f" '(find-file :which-key "find")
    "f r" '(recentf-open-files :which-key "recent")
    "f s" '(save-buffer :which-key "save")
    "f S" '(write-file :which-key "save as...")
    "f c" '((lambda () (interactive) (find-file "~/modmacs/config.org")) :which-key: "config.org")

    ;;Git
    "g"   '(magit-status :which-key "magit")

    ;;Org
    "o"   '(:ignore t :which-key "org")
    "o h"   '(consult-org-heading :which-key "Jump to heading")

    ;;Project
    "p"   '(:ignore t :which-key "project")
    "p s"   '(consult-grep :which-key "search")
    "p f"   '(consult-find :which-key "search")

    ;;Toggles
    "t"   '(:ignore t :which-key "toggles")
    "t t" '(modus-themes-toggle :which-key "light/dark")
    ))

    ;; Make TAB work as expected in org-mode
    (general-define-key
    :states 'normal
    :keymaps 'org-mode-map
    "TAB" 'org-cycle)
#+end_src

* Theme
#+begin_src emacs-lisp
(setq modus-themes-org-blocks 'gray-background
      modus-themes-mixed-fonts t)
(setq modus-themes-common-palette-overrides
     ;; Make the active mode line a fine shade of lavender
     ;; (purple) and tone down the gray of the inactive mode
     ;; lines.
     '((bg-mode-line-active bg-lavender)
     (border-mode-line-active bg-lavender)
     (bg-mode-line-inactive bg-dim)
     (border-mode-line-inactive bg-inactive)
     ;; Hide fringe
     (fringe unspecified)
     ;; Make line numbers less intense and add a shade of cyan
     ;; for the current line number.
     (fg-line-number-inactive "gray50")
     (fg-line-number-active cyan-cooler)
     (bg-line-number-inactive unspecified)
     (bg-line-number-active unspecified) 
     ;; Remove the border
     (border-mode-line-active unspecified)
     (border-mode-line-inactive unspecified)))

(use-package solar
  :ensure nil
  :config
  (setq calendar-latitude 59.33
        calendar-longitude 18.06))

(use-package circadian
  :after solar
  :config
  (setq circadian-themes '((:sunrise . modus-operandi)
                           (:sunset  . modus-vivendi)))
  (circadian-setup))

#+end_src

* Org
*** Source Code Block Tag Expansion
Org-tempo is a package that allows for '<s' followed by TAB to expand to a begin_src tag.  Other expansions available include:

| Typing the below + TAB | Expands to ...                          |
|------------------------+-----------------------------------------|
| <a                     | '#+BEGIN_EXPORT ascii' … '#+END_EXPORT  |
| <c                     | '#+BEGIN_CENTER' … '#+END_CENTER'       |
| <C                     | '#+BEGIN_COMMENT' … '#+END_COMMENT'     |
| <e                     | '#+BEGIN_EXAMPLE' … '#+END_EXAMPLE'     |
| <E                     | '#+BEGIN_EXPORT' … '#+END_EXPORT'       |
| <h                     | '#+BEGIN_EXPORT html' … '#+END_EXPORT'  |
| <l                     | '#+BEGIN_EXPORT latex' … '#+END_EXPORT' |
| <q                     | '#+BEGIN_QUOTE' … '#+END_QUOTE'         |
| <s                     | '#+BEGIN_SRC' … '#+END_SRC'             |
| <v                     | '#+BEGIN_VERSE' … '#+END_VERSE'         |

#+begin_src emacs-lisp
(use-package org-tempo
  :ensure nil) ;; tell use-package not to try to install org-tempo since it's already there.
#+end_src

*** Source Code Block Syntax Highlighting
We want the same syntax highlighting in source blocks as in the native language files.
#+begin_src emacs-lisp
(setq org-src-fontify-natively t
    org-src-tab-acts-natively t
    org-confirm-babel-evaluate nil
    org-edit-src-content-indentation 0)
#+end_src

*** Enable evaluating code blocks
#+begin_src emacs-lisp
;; active Babel languages
(org-babel-do-load-languages
'org-babel-load-languages
'((shell . t)))
#+end_src

* Misc settings
Font size
#+begin_src emacs-lisp
  (set-face-attribute 'default nil
    :height 150)
#+end_src

Start with a scratch buffer
 #+begin_src emacs-lisp
  (setq inhibit-startup-message t)
#+end_src

Disable Menubar, Toolbars and Scrollbars
#+begin_src emacs-lisp
  (menu-bar-mode -1)
  (tool-bar-mode -1)
  (scroll-bar-mode -1)
#+end_src

Highlight active line
#+begin_src emacs-lisp
  (hl-line-mode t)
#+end_src

Show line numbers
#+begin_src emacs-lisp
  (global-display-line-numbers-mode 1)
#+end_src

Refresh buffer if the underlying file changes
#+begin_src emacs-lisp
  (global-auto-revert-mode 1) 
#+end_src

Refresh dired when files change
#+begin_src emacs-lisp
  (setq global-auto-revert-non-file-buffers t) 
#+end_src

Enable recent files
#+begin_src emacs-lisp
  (recentf-mode 1)
#+end_src

Restore last cursor location in previously opened files
#+begin_src emacs-lisp
  (save-place-mode 1)
#+end_src
